# Production Environment Configuration
spring:
  profiles:
    include: logging, management, kafka

# Production-specific overrides
logging:
  level:
    com.ikea.warehouse_data_ingestion_service: WARN
    org.springframework.web.multipart: WARN
    org.springframework.kafka: WARN
    org.apache.kafka: ERROR
    org.springframework.web: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} %-5level [%X{traceId:-}] %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} %-5level [%X{traceId:-}] %logger{50} - %msg%n"
  file:
    name: logs/warehouse-ingestion-prod.log
    max-size: 200MB
    max-history: 30
    total-size-cap: 5GB

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
    info:
      enabled: false
  prometheus:
    metrics:
      export:
        step: 30s
  metrics:
    tags:
      environment: production
      region: ${DEPLOYMENT_REGION:unknown}

kafka:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
  topic: ${KAFKA_TOPIC:warehouse-events-prod}
  producer:
    retries: 10
    batch-size: 32768
    linger-ms: 5
    buffer-memory: 67108864
    acks: all
    enable-idempotence: true
    max-in-flight-requests-per-connection: 1
    compression-type: snappy
  consumer:
    group-id: ${KAFKA_CONSUMER_GROUP:warehouse-ingestion-prod-group}
    auto-offset-reset: earliest
    enable-auto-commit: false
    max-poll-records: 100
    session-timeout-ms: 30000
    heartbeat-interval-ms: 10000
  retry:
    attempts: 5
    backoff-delay: 2000

server:
  port: ${SERVER_PORT:8080}
